#!/usr/bin/env python
from __future__ import absolute_import
from __future__ import division
from __future__ import print_function

import os
import setuptools
from distutils.core import setup
from distutils.extension import Extension
import numpy as np

## Use Cython if wrapper.c is missing.
USE_CYTHON = not os.path.isfile('coco/wrapper.c')
## Or we force its use on the command line.
if not USE_CYTHON and os.getenv('USE_CYTHON', 'false') == 'true':
    USE_CYTHON = True

cmdclass = {}
extensions = []

if USE_CYTHON:
    print("NOTE: Using Cython to build interface.")
    from Cython.Distutils import build_ext
    extensions.append(Extension('cocoex._interface',
                                sources=['cython/interface.pyx', 'cython/coco.c'],
                                include_dirs=[np.get_include()]))
    cmdclass.update({'build_ext': build_ext})
else:
    print("NOTE: Using precompiled C file to build interface.")
    extensions.append(Extension('cocoex._interface',
                                sources=['cython/interface.c', 'cython/coco.c'],
                                include_dirs=[np.get_include()]))
setup(
    name = 'CoCOex',
    version = "$COCO_VERSION",
    packages = ['cocoex'],
    package_dir = {'cocoex': 'python'},
    cmdclass=cmdclass,
    ext_modules = extensions,
    url = 'https://github.com/numbbo/numbbo/',
    license = 'BSD',
    maintainer = 'Olaf Mersmann',
    maintainer_email = 'olafm@p-value.net',
    # author = ['Anne Auger', 'Bernd Bischl', 'Dimo Brockhoff',
    #            'Nikolaus Hansen', 'Olaf Mersmann', 'Petr Posik',
    #            'Mike Preuss',  'Rodolphe le Riche', 'Guenter Rudolph',
    #            'Marc Schoenauer', 'Heike Trautmann'],
    description = 'Benchmarking framework for all types of black-box optimization algorithms.',
    long_description = '...',
    install_requires = ['numpy>=1.7'],
    classifiers = [
        'Development Status :: 4 - Beta',
        'Environment :: ??',
        'Intended Audience :: ??',
        'License :: OSI Approved :: BSD License',
        'Operating System :: OS Independent',
        'Programming Language :: Python',
        'Topic :: ??'
    ]
)
