name: build

on:
  push:
  pull_request:
    branches: [ main ]
    paths:
      - "build/*"
      - "src/*"
      - "test/*"
      - "scripts/*"
      
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  source-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - uses: actions/setup-python@v5
      with:
        python-version: "3.10"
        cache: "pip"
    - name: Setup Python
      run: python -m pip install --upgrade -r scripts/requirements.txt
    - name: Fabricate COCO
      run: python scripts/fabricate
    - name: Run core unit tests
      working-directory: ${{github.workspace}}/test/unit-test/
      run: |
        cmake -B build .
        cmake --build build
        ctest --test-dir build
    - name: Run core integration tests
      working-directory: ${{github.workspace}}/test/integration-test/
      run: |
        cmake -B build .
        cmake --build build
        ctest --test-dir build
    - name: Build coco-experiment Python package
      run: python -m build -s -o dist build/python
    - name: Archive C source package
      uses: actions/upload-artifact@v3
      with:
        name: dist-c
        path: dist/cocoex-c-*.zip
    - name: Archive Java source package
      uses: actions/upload-artifact@v3
      with:
        name: dist-java
        path: dist/cocoex-java-*.zip
    - name: Archive Matlab source package
      uses: actions/upload-artifact@v3
      with:
        name: dist-matlab
        path: dist/cocoex-matlab-*.zip
    - name: Archive Octave source package
      uses: actions/upload-artifact@v3
      with:
        name: dist-octave
        path: dist/cocoex-octave-*.zip
    - name: Archive Rust source package
      uses: actions/upload-artifact@v3
      with:
        name: dist-rust
        path: dist/cocoex-rust-*.zip
    - name: Archive cocoex Python source package
      uses: actions/upload-artifact@v3
      with:
        name: dist-python-sdist
        path: |
          dist/coco_experiment*.tar.gz

  paths-filter:
    runs-on: ubuntu-latest
    outputs:
      python: ${{ steps.filter.outputs.python }}
      c: ${{ steps.filter.outputs.c }}
      java: ${{ steps.filter.outputs.java }}
      octave: ${{ steps.filter.outputs.octave }}
      rust: ${{ steps.filter.outputs.rust }}
    steps:
    - uses: actions/checkout@v4
    - uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: |
          python:
            - "build/python/**"
            - "src/**"
            - "test/**"
          c:
            - "build/c/**"
            - "src/**"
          java:
            - "build/java/**"
            - "src/**"
          octave:
            - "build/octave/**"
            - "src/**"
          rust:
            - "build/rust/**"
            - "src/**"

  python-test:
    needs: [source-build, paths-filter]
    if: needs.paths-filter.outputs.python == 'true'
    uses: ./.github/workflows/test_python.yml

  c-test:
    needs: [source-build, paths-filter]
    if: needs.paths-filter.outputs.c == 'true'
    uses: ./.github/workflows/test_c.yml
 
  java-test:
    needs: [source-build, paths-filter]
    if: needs.paths-filter.outputs.java == 'true'
    uses: ./.github/workflows/test_java.yml

  octave-test:
    needs: [source-build, paths-filter]
    if: needs.paths-filter.outputs.octave == 'true'
    uses: ./.github/workflows/test_octave.yml
  
  rust-test:
    needs: [source-build, paths-filter]
    if: needs.paths-filter.outputs.rust == 'true'
    uses: ./.github/workflows/test_rust.yml
